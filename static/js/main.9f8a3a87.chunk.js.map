{"version":3,"sources":["components/Feedback/Statistics.jsx","components/Feedback/FeedbackOptions.jsx","components/Feedback/Section.jsx","components/Feedback/Notification.jsx","components/Feedback/Feedback.jsx","components/App.jsx","index.js","components/Feedback/Feedback.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","options","Object","keys","map","item","key","className","styles","FeedbackBtn","type","value","onClick","Section","title","children","defaultProps","Notification","message","Feedback","state","handleClickFeedback","e","valueBtn","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"oNAyBeA,MAtBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,6BACE,4BACE,qCAAWJ,GACX,wCAAcC,GACd,oCAAUC,IAEZ,qCAAWC,GACX,gDAAgC,IAAVA,EAAc,GAAd,UAAsBC,EAAtB,Q,gBCgBbC,MAxBf,YAAwD,IAA7BC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,QAC1C,OACE,kBAAC,WAAD,KACGC,OAAOC,KAAKF,GAASG,KAAI,SAAAC,GAAI,OAC5B,4BACEC,IAAKD,EACLE,UAAWC,IAAOC,YAClBC,KAAK,SACLC,MAAON,EACPO,QAASZ,GAERK,MAGL,4CCfN,SAASQ,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,iCACE,4BAAKD,GACJC,GASPF,EAAQG,aAAe,CACrBF,MAAO,IAGMD,QCjBf,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAKA,GAOdD,EAAaD,aAAe,CAC1BE,QAAS,IAGID,QCkDAE,E,4MA1DbC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPyB,oBAAsB,SAAAC,GACpB,IAAMC,EAAWD,EAAEE,OAAOb,MACT,SAAbY,EACF,EAAKE,UAAS,kBAAe,CAC3B/B,KADY,EAAGA,KACF,MAEO,YAAb6B,EACT,EAAKE,UAAS,kBAAkB,CAC9B9B,QADY,EAAGA,QACI,MAEC,QAAb4B,GACT,EAAKE,UAAS,kBAAc,CAC1B7B,IADY,EAAGA,IACJ,O,EAKjB8B,mBAAqB,YACnB,OAD+C,EAAzBhC,KAAyB,EAAnBC,QAAmB,EAAVC,K,EAIvC+B,gCAAkC,YAA6B,IAA1BjC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAClD,OAAOgC,KAAKC,MAAOnC,GAAQA,EAAOC,EAAUC,GAAQ,M,uDAG5C,IAAD,EACwBkC,KAAKV,MAA5B1B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQiC,KAAKJ,mBAAmBI,KAAKV,OACrCtB,EAAqBgC,KAAKH,gCAAgCG,KAAKV,OAErE,OACE,kBAAC,EAAD,CAASN,MAAM,yBACb,kBAAC,EAAD,CACEd,gBAAiB8B,KAAKT,oBACtBpB,QAAS6B,KAAKV,QAEL,IAAVvB,EACC,kBAAC,EAAD,CAAcqB,QAAQ,sBAEtB,kBAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,S,GAnDTiC,aCMRC,MARf,WACE,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,QCFNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,YAAc,gC","file":"static/js/main.9f8a3a87.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n      </ul>\r\n      <p>Total: {total}</p>\r\n      <p>Positve feedback: {total === 0 ? '' : `${positivePercentage}%`}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Feedback.module.css';\r\n\r\nfunction FeedbackOptions({ onLeaveFeedback, options }) {\r\n  return (\r\n    <Fragment>\r\n      {Object.keys(options).map(item => (\r\n        <button\r\n          key={item}\r\n          className={styles.FeedbackBtn}\r\n          type=\"button\"\r\n          value={item}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {item}\r\n        </button>\r\n      ))}\r\n      <h3>Statistics</h3>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return <h4>{message}</h4>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nNotification.defaultProps = {\r\n  message: '',\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport Statistics from './Statistics';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Section from './Section';\r\nimport Notification from './Notification';\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleClickFeedback = e => {\r\n    const valueBtn = e.target.value;\r\n    if (valueBtn === 'good') {\r\n      this.setState(({ good }) => ({\r\n        good: good + 1,\r\n      }));\r\n    } else if (valueBtn === 'neutral') {\r\n      this.setState(({ neutral }) => ({\r\n        neutral: neutral + 1,\r\n      }));\r\n    } else if (valueBtn === 'bad') {\r\n      this.setState(({ bad }) => ({\r\n        bad: bad + 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  countTotalFeedback = ({ good, neutral, bad }) => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = ({ good, neutral, bad }) => {\r\n    return Math.round((good / (good + neutral + bad)) * 100);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback(this.state);\r\n    const positivePercentage = this.countPositiveFeedbackPercentage(this.state);\r\n\r\n    return (\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          onLeaveFeedback={this.handleClickFeedback}\r\n          options={this.state}\r\n        />\r\n        {total === 0 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            positivePercentage={positivePercentage}\r\n          />\r\n        )}\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React, { Fragment } from 'react';\r\n\r\nimport Feedback from './Feedback/Feedback';\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <Feedback />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackBtn\":\"Feedback_FeedbackBtn__2CEbF\"};"],"sourceRoot":""}